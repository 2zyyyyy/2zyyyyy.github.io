{"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Android RecyclerView实现复杂列表布局","text":"​ 这次学习的内容是使用RecyclerView来实现一些较为复杂的布局，比如一个item： 最左边是一个imageview，中间部分为textView，textView下面又是一个textView，最右边为一个imageview。 1、首先在activity_main.xml中添加RecyclerView，随后正如之前所说的分别针对左中右新建3个XML布局文件命名为item_type_one、two、three.随后对其进行布局配置。2、新建一个adapter添加模拟数据。然后针对布局新建三个viewholder。随后新建一个抽象类TypeAbstractViewHolder，将三个viewholder用到的同一个方法封装起来调用,将三个viewHolder继承自抽象类。为了优雅。activity_main.xml: 1234567891011121314151617181920&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:id=&quot;@+id/activity_main&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot; android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot; android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot; android:paddingTop=&quot;@dimen/activity_vertical_margin&quot; tools:context=&quot;com.example.tony.recyclerviewdemo.MainActivity&quot;&gt; &lt;android.support.v7.widget.RecyclerView android:id=&quot;@+id/recycleView&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;/android.support.v7.widget.RecyclerView&gt;&lt;/RelativeLayout&gt; item_type_one.xml: 12345678910111213141516171819202122&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;60dp&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:background=&quot;@android:color/white&quot; android:gravity=&quot;center_vertical&quot; android:orientation=&quot;horizontal&quot;&gt; &lt;ImageView android:id=&quot;@+id/avatar&quot; android:layout_width=&quot;40dp&quot; android:layout_height=&quot;40dp&quot; android:layout_marginLeft=&quot;20dp&quot; /&gt; &lt;TextView tools:text = &quot;月满轩尼诗&quot; android:id=&quot;@+id/name&quot; android:layout_marginLeft=&quot;20dp&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; /&gt;&lt;/LinearLayout&gt; item_type_two.xml: 1234567891011121314151617181920212223242526272829303132333435363738&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;60dp&quot; android:background=&quot;@android:color/white&quot; android:gravity=&quot;center_vertical&quot; android:orientation=&quot;horizontal&quot;&gt; &lt;ImageView android:id=&quot;@+id/avatar&quot; android:layout_width=&quot;40dp&quot; android:layout_height=&quot;40dp&quot; android:layout_marginLeft=&quot;20dp&quot; /&gt; &lt;LinearLayout android:layout_marginLeft=&quot;20dp&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:orientation=&quot;vertical&quot;&gt; &lt;TextView android:id=&quot;@+id/name&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; tools:text=&quot;月满轩尼诗&quot; /&gt; &lt;TextView android:id=&quot;@+id/content&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;5dp&quot; tools:text=&quot;月满轩尼诗是一部好电影吗？&quot; /&gt; &lt;/LinearLayout&gt;&lt;/LinearLayout&gt; item_type_three.xml: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;60dp&quot; android:background=&quot;@android:color/white&quot; android:gravity=&quot;center_vertical&quot; android:orientation=&quot;horizontal&quot;&gt; &lt;ImageView android:id=&quot;@+id/avatar&quot; android:layout_width=&quot;40dp&quot; android:layout_height=&quot;40dp&quot; android:layout_centerVertical=&quot;true&quot; android:layout_marginLeft=&quot;20dp&quot; /&gt; &lt;ImageView android:id=&quot;@+id/contentImage&quot; android:layout_width=&quot;100dp&quot; android:layout_height=&quot;60dp&quot; android:layout_alignParentRight=&quot;true&quot; android:layout_centerVertical=&quot;true&quot; android:layout_marginLeft=&quot;20dp&quot; android:layout_marginRight=&quot;20dp&quot; /&gt; &lt;LinearLayout android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginLeft=&quot;20dp&quot; android:orientation=&quot;vertical&quot; android:layout_centerVertical=&quot;true&quot; android:layout_toRightOf=&quot;@+id/avatar&quot; android:layout_toEndOf=&quot;@+id/avatar&quot; android:layout_marginStart=&quot;20dp&quot;&gt; &lt;TextView android:id=&quot;@+id/name&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; tools:text=&quot;月满轩尼诗&quot; /&gt; &lt;TextView android:id=&quot;@+id/content&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginTop=&quot;5dp&quot; tools:text=&quot;月满轩尼诗是一部好电影吗？&quot; /&gt; &lt;/LinearLayout&gt;&lt;/RelativeLayout&gt; 这边提一个小技巧，一般textview如果不设置文本内容的话是无法预览的，这里我们在属性中添加一个：tools:text=”abc”;这个时候abc就会在UI上面显示出来了，而且abc也不用加入string.xml. Java文件：MAinActivity.class 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051package com.example.tony.recyclerviewdemo;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import java.util.ArrayList;import java.util.List;public class MainActivity extends AppCompatActivity { private RecyclerView mRecyclerView; private DemoAdapter mAdapter; int colors[] = {android.R.color.holo_blue_light, android.R.color.holo_orange_light, android.R.color.holo_red_light}; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mRecyclerView = (RecyclerView) findViewById(R.id.recycleView); mRecyclerView.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)); mAdapter = new DemoAdapter(this); mRecyclerView.setAdapter(mAdapter); initData(); } private void initData() { List&lt;DataModel&gt; list = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 20; i++) { int type = (int) (Math.random() * 3 + 1); DataModel data = new DataModel(); data.avatarColor = colors[type - 1]; data.type = type; data.name = &quot;Name: &quot; + i; data.content = &quot;Content: &quot; + i; data.contentColor = colors[(type + 1) % 3]; list.add(data); } mAdapter.addList(list); mAdapter.notifyDataSetChanged(); }} DemoAdapter.class 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859package com.example.tony.recyclerviewdemo;import android.content.Context;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.ViewGroup;import java.util.ArrayList;import java.util.List;/* * Created by Tony on 2016/12/3. */public class DemoAdapter extends RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt;{ private LayoutInflater mLayoutInflater; private List&lt;DataModel&gt; mList = new ArrayList&lt;&gt;(); public DemoAdapter(Context context) { mLayoutInflater = LayoutInflater.from(context); } public void addList(List&lt;DataModel&gt; list) { mList.addAll(list); } @Override public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) { switch (viewType) { case DataModel.TYPE_ONE: return new TypeOneViewHolder(mLayoutInflater.inflate(R.layout.item_type_one, parent, false)); case DataModel.TYPE_TWO: return new TypeTwoViewHolder(mLayoutInflater.inflate(R.layout.item_type_two, parent, false)); case DataModel.TYPE_THREE: return new TypeThreeViewHolder(mLayoutInflater.inflate(R.layout.item_type_three, parent, false)); } return null; } @Override public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) { ((TypeAbstractViewHolder) holder).bindHolder(mList.get(position)); } @Override public int getItemViewType(int position) { return mList.get(position).type; } @Override public int getItemCount() { return mList.size(); }} DataModel.class 123456789101112131415161718192021222324package com.example.tony.recyclerviewdemo;/** * Created by Tony on 2016/12/3. */public class DataModel { public static final int TYPE_ONE = 1; public static final int TYPE_TWO = 2; public static final int TYPE_THREE = 3; public int type; public int avatarColor; public String name; public String content; public int contentColor;} TypeAbstractViewHolder.class 12345678910111213141516package com.example.tony.recyclerviewdemo;import android.support.v7.widget.RecyclerView;import android.view.View;/** * Created by Tony on 2016/12/3. */public abstract class TypeAbstractViewHolder extends RecyclerView.ViewHolder{ public TypeAbstractViewHolder(View itemView) { super(itemView); } public abstract void bindHolder(DataModel model);} TypeOneViewHolder.class 1234567891011121314151617181920212223242526272829package com.example.tony.recyclerviewdemo;import android.view.View;import android.widget.ImageView;import android.widget.TextView;/** * Created by Tony on 2016/12/3. */public class TypeOneViewHolder extends TypeAbstractViewHolder { private ImageView avatar; private TextView name; public TypeOneViewHolder(View itemView) { super(itemView); avatar = (ImageView) itemView.findViewById(R.id.avatar); name = (TextView) itemView.findViewById(R.id.name); } //ViewHolder数据和外面数据绑定起来 @Override public void bindHolder(DataModel model) { avatar.setBackgroundResource(model.avatarColor); name.setText(model.name); }} TypeTwoViewHolder.class 12345678910111213141516171819202122232425262728293031323334package com.example.tony.recyclerviewdemo;import android.support.v7.widget.RecyclerView;import android.view.View;import android.widget.ImageView;import android.widget.TextView;/** * Created by Tony on 2016/12/3. */public class TypeTwoViewHolder extends TypeAbstractViewHolder { private ImageView avatar; private TextView name; private TextView content; public TypeTwoViewHolder(View itemView) { super(itemView); avatar = (ImageView) itemView.findViewById(R.id.avatar); name = (TextView) itemView.findViewById(R.id.name); content = (TextView) itemView.findViewById(R.id.content); } //ViewHolder数据和外面数据绑定起来 @Override public void bindHolder(DataModel model) { avatar.setBackgroundResource(model.avatarColor); name.setText(model.name); content.setText(model.content); }} TypeThreeViewHolder.class 12345678910111213141516171819202122232425262728293031323334353637package com.example.tony.recyclerviewdemo;import android.view.View;import android.widget.ImageView;import android.widget.TextView;/** * Created by Tony on 2016/12/3. */public class TypeThreeViewHolder extends TypeAbstractViewHolder { private ImageView avatar; private TextView name; private TextView content; private ImageView contentImage; public TypeThreeViewHolder(View itemView) { super(itemView); avatar = (ImageView) itemView.findViewById(R.id.avatar); contentImage = (ImageView) itemView.findViewById(R.id.contentImage); name = (TextView) itemView.findViewById(R.id.name); content = (TextView) itemView.findViewById(R.id.content); } //ViewHolder数据和外面数据绑定起来 @Override public void bindHolder(DataModel model) { avatar.setBackgroundResource(model.avatarColor); name.setText(model.name); contentImage.setBackgroundResource(model.contentColor); content.setText(model.content); }}","link":"/2019/12/26/Android-RecyclerView%E5%AE%9E%E7%8E%B0%E5%A4%8D%E6%9D%82%E5%88%97%E8%A1%A8%E5%B8%83%E5%B1%80/"},{"title":"我的第一篇Hexo博客","text":"原CSDN博客迁移说明https://blog.csdn.net/qq_31568297 这是在CSDN上的博客地址之前由于账户异常原因无法登录，现将迁移至Hexo目前该网站内容暂未做填充，内容会慢慢迁移过来，平时工作学习生活也将在这里记录","link":"/2019/12/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87hexo%E5%8D%9A%E5%AE%A2/"},{"title":"本地图片测试","text":"测试图片显示本地图片显示测试 1、方式有多种 我采用的是引用本地绝对路径 当然你也可以引用相对路径或者标签插件2、无须设置_config.yml中的post_asset_folder 默认为true 默认为false3、文章中图片使用！[](图片路径)如果是缩略图的话需要在icarus中的_config.yml.thumbnail设置为true,随后在文章的头部新增该标签，放入图片路径。thumbnail: /images/***.jpg","link":"/2019/12/25/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/"},{"title":"自动化测试发送邮件异常","text":"​ 今天在学习发送邮件的时候遇到了几个问题，这边一是记录一下 二是给同样遇到问题的同学解惑 1、这个问题我发生的原因是163邮箱 SMTP协议未开启，如果已开启还是报这个错误尝试重新开启一次。开启之后是设置变量也好还是input密码记住不能用163邮箱的登录密码，而是需要使用设置的客户端授权密码。以上针对我出现的这个问题得到了解决。2、看廖雪峰的简单邮件实例发现自己运行后报554，官方解释就是被屏蔽了。 1234567891011121314151617181920from email.mime.text import MIMETextimport smtplibfrom email.header import Headermsg = MIMEText('真的不知道是什么原因', 'plain', 'utf-8')# 输入Email地址和口令:from_addr = 'xxx@163.com'password = '客户端授权密码'# 输入收件人信息:to_addr = 'xxx@qq.com'# 输入SMTP服务器地址:smtp_server = 'smtp.163.com'server = smtplib.SMTP(smtp_server, 25) # SMTP协议默认端口是25server.set_debuglevel(1) # 打印出和SMTP服务器交互的所有信息server.login(from_addr, password)server.sendmail(from_addr, [to_addr], msg.as_string())server.quit()print('success') 这样的163–&gt;qq 邮箱的（别的我没有试过）是不会成功的，一直报554的错误。我网上找了几个办法好像都行不通。后来我仔细琢磨了一下屏蔽原因会不会是右键内容太过单调而导致的呢。于是我新增了几个属性 123msg['Subject'] = Header('放假通知', 'utf-8')msg['From'] = 'xxx@163.com'msg['To'] = &quot;xxx@qq.com&quot; 运行成功。","link":"/2019/12/25/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E5%BC%82%E5%B8%B8-554/"}],"tags":[{"name":"移动开发","slug":"移动开发","link":"/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"},{"name":"安卓","slug":"安卓","link":"/tags/%E5%AE%89%E5%8D%93/"},{"name":"其他","slug":"其他","link":"/tags/%E5%85%B6%E4%BB%96/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"Smtplib","slug":"Smtplib","link":"/tags/Smtplib/"},{"name":"Email","slug":"Email","link":"/tags/Email/"}],"categories":[{"name":"Android","slug":"Android","link":"/categories/Android/"},{"name":"其他","slug":"其他","link":"/categories/%E5%85%B6%E4%BB%96/"},{"name":"Python","slug":"Python","link":"/categories/Python/"}]}